name: Meshplay Extension Test
on:
  release:
    types: [published]
  # pull_request:
  #   paths-ignore:
  #     - 'site/**/**'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  build-ui-and-server:
    uses: khulnasoft/meshplay/.github/workflows/build-ui-server-reusable-workflow.yml@master
    secrets:
      NODE_VERSION: ${{ secrets.NODE_VERSION }}
      GO_VERSION: ${{ secrets.GO_VERSION }}
  tests-ui-e2e:
    needs: [build-ui-and-server]
    name: UI end-to-end tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out Meshplay code
        uses: actions/checkout@v4
        with:
          repository: khulnasoft/meshplay
          fetch-depth: 1
          path: .
      - name: Check out meshplay-consul code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          repository: khulnasoft/meshplay-consul
          path: ./meshplay-consul
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshplay
          path: server/cmd/
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ secrets.GO_VERSION }}
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ secrets.NODE_VERSION }}
      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.1.0
        with:
          cluster_name: "kind-cluster"
      - name: Create a out/ folder in meshplay ui
        run: |
          mkdir -p ui/out
      - name: Download Meshplay-ui artifacts
        uses: actions/download-artifact@v4
        with:
          name: meshplay-ui-build
          path: ui/out/
      - name: Update /etc/hosts
        run: echo "127.0.0.1 meshplaylocal.khulnasoft.com" | sudo tee -a /etc/hosts
      - name: Run meshplay-consul
        run: |
          mkdir -p /home/runner/.meshplay/bin
          cd ./meshplay-consul
          go run main.go &
          sleep 60
      - name: Set Release extensions
        run: |
          curl -s https://api.github.com/repos/khulnasoft-lab/meshplay-extensions-packages/releases >> extension_releases.json
          export TAG=$(jq .[0].tag_name extension_releases.json)
          echo tag=$TAG >> $GITHUB_ENV
          echo $TAG
      - name: make directories
        run: |
          echo ${{env.tag}}
          echo ${{env}}
          mkdir -p /home/runner/.meshplay/provider/Meshplay/${{env.tag}}/provider/navigator
      - name: Run backend
        env:
          PROVIDER_BASE_URLS: https://meshplay.khulnasoft.com
          PORT: 9081
          ADAPTER_URLS: "meshplaylocal.khulnasoft.com:10000 meshplaylocal.khulnasoft.com:10001 meshplaylocal.khulnasoft.com:10002 meshplaylocal.khulnasoft.com:10003 meshplaylocal.khulnasoft.com:10004 meshplaylocal.khulnasoft.com:10008 meshplaylocal.khulnasoft.com:10009 meshplaylocal.khulnasoft.com:10007"
        run: |
          cd server/cmd
          chmod +x ./main
          BUILD=${{env.tag}} ./main &
      - name: Download Meshplay Extension Package Version ${{env.tag}}
        run: |
          wget https://github.com/khulnasoft-lab/meshplay-extensions-packages/releases/download/${{env.tag}}/provider-meshplay.tar.gz 
          tar -xzf   provider-meshplay.tar.gz -C /home/runner/.meshplay/provider/Meshplay/${{env.tag}}
      - name: show runner tree
        run: tree /home/runner/.meshplay
      - name: checkout cypress code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          path: ./cypress
      - name: Move cypress tests
        run: |
          rm -rf ui/cypress
          rm ui/cypress.config.js
          mv cypress/cypress ui/
          mv cypress/cypress.config.js ui/cypress.config.js
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          working-directory: ui
          spec: cypress/e2e/e2e/**/*
          browser: chrome 
          record: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_token: ${{ secrets.PROVIDER_TOKEN }}
          CYPRESS_releasetag: ${{env.tag}}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-ss
          path: ui/cypress/screenshots
      - name: Upload Videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-ss
          path: ui/cypress/videos
